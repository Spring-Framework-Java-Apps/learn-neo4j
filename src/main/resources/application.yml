endpoints:
  env:
    - keys-to-sanitize: "password"
    - keys-to-sanitize: "secret"
    - keys-to-sanitize: "key"
    - keys-to-sanitize: "passwort"
  health:
    sensitive: false
  endpoints:
    shutdown:
      enabled: false
server:
  error:
    path: /fehler
  compression:
    enabled: true
    min-response-size: 2048
hibernate:
  dialect: org.hibernate.dialect.PostgreSQL94Dialect
info:
  application:
    artifactId: @project.artifactId@
    description: @project.description@
    groupId: @project.groupId@
    name: @project.name@
    version: @project.version@
management:
  address: 127.0.0.1
  context-path: "/manage"
  security:
    enabled: true
spring:
  application:
      admin:
        enabled: true
      name: @project.name@
  data:
    neo4j:
      open-in-view: true
      username: neo4j
      password: secret
      repositories:
        enabled: true
    jpa:
      repositories:
        enabled: true
    web:
      pageable:
        default-page-size: 20
        max-page-size: 200
        page-parameter: page
        size-parameter: size
  dao:
    exceptiontranslation:
      enabled: true
  datasource:
    url: 'jdbc:postgresql://localhost:5432/learn-neo4j?user=jdbc&password=jdbcpwd&schema=public'
    jdbcUrl:  'jdbc:postgresql://localhost:5432/learn-neo4j?user=jdbc&password=jdbcpwd&schema=public'
    username: jdbc
    password: jdbcpwd
    driver-class-name: org.postgresql.Driver
    #generate-unique-name: true
    continue-on-error: true
    #schema: classpath:org/springframework/session/jdbc/schema-postgresql.sql
    #data: classpath:org/springframework/session/jdbc/data-postgresql.sql
    #spring.datasource.data
    #schema: public
    #name: Learnneo4jDS
    #type: com.zaxxer.hikari.HikariDataSource
    #platform: postgresql
    platform: POSTGRESQL
    tomcat:
      max-active: 20
  jpa:
      database-platform: org.hibernate.dialect.PostgreSQL95Dialect
      hibernate:
        ddl-auto: create-drop
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQL94Dialect
          globally_quoted_identifiers: true
          temp:
            use_jdbc_metadata_defaults: false
      open-in-view: true
      generate-ddl: true
      show-sql: true
  session:
      store-type: jdbc
      jdbc:
        initializer:
          enabled: true
  devtools:
      livereload:
        enabled: true
  template:
    cache: false
  thymeleaf:
    enabled: true
    check-template-location: true
    cache: false
org:
  woehlke:
    learn:
      learnneo4j:
          createTestDataAtStartup: true
          loginUsername: tw
          loginPassword: blablabla
          filesystemWorkdir: ports
          seo:
            googleMapsApiKey: ${GRAPH_DB_GOOGLE_APS_API_KEY}
            googleAnalyticsKey: ${GRAPH_DB_GOOGLE_ANALYTICS_ID}
            googleSiteVerification: ${GRAPH_DB_GOOGLE_WEBMASTER_TOOLS_ID}
            msvalidateKey: ${GRAPH_DB_MICROSOFT_WEBMASTER_TOOLS_ID}
            facebookAppId: ${GRAPH_DB_FACEBOOK_APP_ID}
            twitterCardSite: ${GRAPH_DB_TWITTER_CARD_SITE}
            twitterCardCreator: ${GRAPH_DB_TWITTER_CARD_CREATOR}
          pageSubTitle: Graph DB. Power of cool Persistence with Neo4J and Spring-Boot.
          webSecurityConfigPublicPaths:
            - "/welcome"
            - "/welcome/**"
            - "/open/**"
            - "/graph/**"
            - "/db/**"
            - "/img/*"
            - "/img/**"
            - "/css/*"
            - "/css/**"
            - "/favicon/*"
            - "/favicon/**"
            - "/js/*"
            - "/js/**"
            - "/map-icons/*"
            - "/map-icons/**"
            - "/webjars/*"
            - "/webjars/**"
---
spring:
  profiles: default
---
spring:
  profiles: travis
logging:
  config: classpath:logback-travis.xml
  file: logging-travis.log
---
spring:
  profiles: alltests
logging:
  config: classpath:logback-alltests.xml
  file: logging-alltests.log
---
spring:
  profiles: smoketests
logging:
  config: classpath:logback-smoketests.xml
  file: logging-smoketests.log
  level:
    org:
      woehlke:
        learn:
          learnneo4j:
            middleware: DEBUG
            model:
              orm:
                portinfo: DEBUG
              graph:
                category: DEBUG
                license: DEBUG
                maintainer: DEBUG
                platform: DEBUG
                port: DEBUG
                variant: DEBUG
            frontend:
              control:
                closed:
                  terminal: DEBUG
                open:
                  home: DEBUG

